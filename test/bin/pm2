#!/usr/bin/env bash
# Python-backed mock pm2 CLI for local testing
set -euo pipefail
DIR="$(cd "$(dirname "$0")/.." && pwd)"
STATE_FILE="$DIR/state.json"

ensure_state() {
  if [ ! -f "$STATE_FILE" ]; then
    echo "[]" > "$STATE_FILE"
  fi
}

case "${1-}" in
  jlist)
    ensure_state
    cat "$STATE_FILE"
    ;;
  start)
    shift || true
    NAME=""
    CMD=""
    # parse simple args: --name NAME -- <cmd>
    while [[ $# -gt 0 ]]; do
      if [[ "$1" == "--name" ]]; then
        NAME="$2"
        shift 2
      elif [[ "$1" == "--" ]]; then
        shift
        CMD="$*"
        break
      else
        CMD="$*"
        break
      fi
    done
    if [[ -z "$CMD" ]]; then
      echo "No command provided" >&2
      exit 2
    fi
    ensure_state
    python3 - <<PY
import json,sys
f='$STATE_FILE'
with open(f,'r') as fh:
    arr=json.load(fh)
ids=[x.get('pm2_env',{}).get('pm_id',0) for x in arr]
next_id=(max(ids) if ids else 0)+1
name='$NAME' or f'proc-{next_id}'
entry={ 'name': name, 'pm2_env': {'status':'online','pm_id': next_id, 'pm_exec_path':'$CMD'} }
arr.append(entry)
with open(f,'w') as fh:
    json.dump(arr,fh)
print(f'Process started: {name} (id={next_id})')
PY
    ;;
  stop)
    NAME="$2"
    ensure_state
    python3 - <<PY
import json
f='$STATE_FILE'
name='$NAME'
with open(f,'r') as fh:
    arr=json.load(fh)
for x in arr:
    if x.get('name')==name:
        x.setdefault('pm2_env',{})['status']='stopped'
with open(f,'w') as fh:
    json.dump(arr,fh)
print('Stopped: '+name)
PY
    ;;
  restart)
    NAME="$2"
    ensure_state
    python3 - <<PY
import json
f='$STATE_FILE'
name='$NAME'
with open(f,'r') as fh:
    arr=json.load(fh)
for x in arr:
    if x.get('name')==name:
        x.setdefault('pm2_env',{})['status']='online'
with open(f,'w') as fh:
    json.dump(arr,fh)
print('Restarted: '+name)
PY
    ;;
  show)
    NAME="$2"
    ensure_state
    python3 - <<PY
import json,sys
f='$STATE_FILE'
name='$NAME'
with open(f,'r') as fh:
    arr=json.load(fh)
out=[x for x in arr if x.get('name')==name]
print(json.dumps(out[0] if out else {}))
PY
    ;;
  *)
    echo "mock pm2: unknown command $*" >&2
    exit 2
    ;;
esac

